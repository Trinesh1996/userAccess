_642‍.x([["default",()=>_642‍anonymous]]);var _ = require("lodash")

               function  _642‍anonymous( { db } )
{
    async function insertNewRole (role)
    {
        var user_roles = {
            role: role.role
        }
        
        const query = 
        {
            name: 'insert-role',
            text: `INSERT INTO roles (role_name) values ($1)`,
            values: [user_roles.role],
        }
        await db.query(query, function (err, res)
        {
            if (err)
            {
                return err
            }
            else
            {
                return res.rows
            }
        })
    }

    async function getAllRoles ()
    {
       await db.query("SELECT * from roles", function (err, res) {
           if (err)
           {
               return err
           }
           else
           {
               return res.rows
           }
       })
    }

    async function getRolesById (id)
    {
        const query = 
        {
            name: 'get-roles-id',
            text: `SELECT * from roles where id = $1`,
            values: [id],
        }
        await db.query(query, function (err, res)
        {
            if (err)
            {
                return err
            }
            else
            {
                return res.rows
            }
        })
    }

    async function getRolesByName (name)
    {
        const query = 
        {
            name: 'get-roles-name',
            text: `SELECT * from roles where role_name = $1`,
            values: [name],
        }
        await db.query(query, function (err, res)
        {
            if (err)
            {
                return err
            }
            else
            {
                return res.rows
            }
        })
    }

    async function deleteAllRoles ()
    {
        await db.query("DELETE FROM roles", function (err, res)
        {
            if (err)
            {
                return err
            }
            else
            {
                return res.rows
            }
        })
    }

    async function deletRoleById (id)
    {
        const query = 
        {
            name: 'delete-role-id',
            text: `DELETE FROM roles where id = $1`,
            values: [id],
        }
        await db.query(query, function (err, res)
        {
            if (err)
            {
                return err
            }
            else
            {
                return res.rows
            }
        })
    }

    async function updateRoleById (name, id)
    {
        const query = 
        {
            name: 'update-role-id',
            text: `UPDATE roles SET role_name = $1 where id = $2`,
            values: [name, id],
        }
        await db.query(query, function (err, res)
        {
            if (err)
            {
                return err
            }
            else
            {
          
                return res.rows
            }
        })
    }

    async function updateRoleByRoleName (newName, oldName)
    {
        const query = 
        {
            name: 'update-role-name',
            text: `UPDATE roles SET role_name = $1 where role_name = $2`,
            values: [newName, oldName],
        }
        await db.query(query, function (err, res)
        {
            if (err)
            {
                return err
            }
            else
            {
          
                return res.rows
            }
        })
    }


    return Object.freeze({
        insertNewRole,
        getAllRoles,
        getRolesById
        ,getRolesByName
        ,deleteAllRoles
        ,deletRoleById
        ,updateRoleById
        ,updateRoleByRoleName 
    })
}
